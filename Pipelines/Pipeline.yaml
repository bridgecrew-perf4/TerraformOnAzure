# -----------------------------------------------------------------------------
# .SYNOPSIS
#   This pipeline is the main pipeline that contains the top level stages for the deployment
# using other YAML templates as references both locally and from the common library
# .DESCRIPTION
#   This pipeline will:
#  1. Add the common-library for shared pipeline references, which include
#     a. YAML references for Image Builder to deploy custom images and / or containers
#     b. YAML references for Terraform Init, Plan, and Apply, which contain references to common bash scripts

# .ASSUMPTIONS:
#     1. Looping is not needed for environment stages due to different parameters per environment
#     2. Terraform steps are the same across all projects (setup, init, plan, apply)

# .NOTES
#     File Name      : Pipeline.yaml
#     Prerequisite   : ADO Multi-Stage Yaml Pipeline

# -----------------------------------------------------------------------------

name: jumpstart-vm-$(version).$(Rev:rr)


trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude: 
      - /**/*.md
      - /.attachments


#release wide variables
variables:
  - name: version
    value: 0.5

  - template: Variables.yaml
  - name: system.debug 
    value: true


resources:
  repositories:
    - repository: common-library
      type: git
      name: ATT Cloud/common-library
      ref: refs/tags/v0.5.3
      endpoint: ATTDevops_Service_Connection_ATTBC

#comment out line 53-59 if not planning to use image builder resource
  # pipelines:
  #  - pipeline: ATTBC22805
  #    source: jumpstart-image-builder-sig
  #    trigger:
  #      branches:
  #        include:
  #        - PRAV-MULTI

pool: $(agent_pool)

stages:
- stage: Dev
  displayName: Dev
  variables:
    - template: /Pipelines/Variables.dev.yaml
  jobs:
  - template: /Pipelines/Stage.yaml
    parameters:
      environment: dev
      serviceConnectionApp: ${{ variables.serviceConnectionApp }}


#- stage: PROD
#  displayName: PROD
#  variables:
#    - template: /Pipelines/Variables.prod.yaml
##  dependsOn: Nprd
##  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#  jobs:
#  - template: /Pipelines/Stage.yaml
#    parameters:
#      environment: prod
#      serviceConnectionApp: ${{ variables.serviceConnectionApp }}
