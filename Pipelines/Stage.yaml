parameters:
- name: environment
  type: string
  displayName: 'The environment name'

- name: serviceConnectionApp
  type: string
  displayName: 'The Service Connection to run Terraform'

- name: dependsOn
  type: string
  displayName: 'The components this job depends on like another job'
  default: ''

jobs:
- deployment: ${{ parameters.environment }}
  dependsOn: ${{ parameters.dependsOn }}
  displayName: Deploy
  environment: ${{ parameters.environment }}
  timeoutInMinutes: 240
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
        - checkout: common-library
        - task: DownloadPipelineArtifact@2
          displayName: 'Download Pipeline Artifact'
          condition: and(succeeded(), eq(variables['image_builder'], 'true'))
          inputs:
            source: specific
            project: '22805-ATTBC' # <--- CHANGE TO YOUR ADO PROJECT NAME
            pipeline: 22404 # <-- CHANGE TO YOUR IMAGE BUILDER PIPELINE DEFINITION ID
            preferTriggeringPipeline: true
            buildVersionToDownload: 'specific'
            runId:  $(resources.pipeline.ATTBC22805.runID) #<-- VERIFY ALIAS MATCHES RESOURCE NAME SET ON PIPELINE.YAML
            path: $(Build.ArtifactStagingDirectory)

        - task: CopyFiles@2
          displayName: "Copy tfvars"
          condition: and(succeeded(), eq(variables['image_builder'], 'true'))
          inputs:
            sourceFolder: $(Build.ArtifactStagingDirectory)
            contents: '*.artifact/*.auto.tfvars'
            targetFolder: $(Build.Repository.Name)/Terraform
            flattenFolders: true

        - script: |

              cd "$(Build.Repository.Name)/Terraform"
              echo "auto.tfvars contents:"
              cat *.auto.tfvars 
  
          displayName: "Display tfvars"
          condition: and(succeeded(), eq(variables['image_builder'], 'true'))
             
        - template: PipelineTemplates/Terraform/Terraform.yaml@common-library
          parameters:
            serviceConnectionApp: ${{ parameters.serviceConnectionApp }}
            environment: ${{ parameters.environment }}